[
    {
        "model": "KNeighborsClassifier",
        "params": {
            "n_neighbors": [300]
        }
    },
    {
        "model": "LogisticRegression",
        "params": {
            "penalty": ["l1"]
        }
    },
    {
        "model": "SGDClassifier",
        "params": {
            "loss": ["hinge", "log", "modified_huber", "squared_hinge", "perceptron"],
            "penalty": ["l1", "l2", "elasticnet"],
            "n_iter": [10, 20],
            "eta0": [0, 0.1, 0.01]
        }
    },
    {
        "model": "RandomForestClassifier",
        "params": {
            "criterion": ["entropy"],
            "min_samples_leaf": [15],
            "min_samples_split": [2],
            "max_features": ["sqrt"]
        }
    },
    {
        "model": "GradientBoostingClassifier",
        "params": {
            "loss": ["deviance"],
            "learning_rate": [0.1],
            "n_estimators": [100],
            "max_depth": [3],
            "min_samples_split": [2],
            "min_samples_leaf": [1],
            "max_features": ["sqrt"]
        }
    },
    {
        "model": "AdaBoostClassifier",
        "params": {
            "learning_rate": [1]
        }
    },
    {
        "model": "LinearSVC",
        "params": {
            "C": [0.1],
            "penalty": ["l1"],
            "dual": [false]
        }
    },
    {
        "model": "SVC",
        "params": {
            "C": [1, 0.1, 0.01],
            "kernel": ["rbf"]
        }
    }
]
